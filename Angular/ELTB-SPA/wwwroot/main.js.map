{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/TestBed/esolang.service.ts","webpack:///./src/app/TestBed/execution.component.ts.ExecutionComponent.html","webpack:///./src/app/TestBed/execution.component.ts","webpack:///./src/app/TestBed/language.component.ts.LanguageComponent.html","webpack:///./src/app/TestBed/language.component.ts","webpack:///./src/app/TestBed/testbed.component.html","webpack:///./src/app/TestBed/testbed.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/shared/expandable-summary.component.ts.ExpandableSummaryComponent.html","webpack:///./src/app/shared/expandable-summary.component.ts","webpack:///./src/app/shared/navbar.component.ts.NavbarComponent.html","webpack:///./src/app/shared/navbar.component.ts","webpack:///./src/app/shared/summariser.pipe.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACF;AACX;AAG8B;AAEnE;IAOE,wBAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;QACnC,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7C,CAAC;IAED,2CAAkB,GAAlB;QACE,OAAO,IAAI;aACR,KAAK;aACL,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACxB,IAAI,CAAC,0DAAG,CAAC,UAAC,IAAW;YACpB,OAA8B,IAAI;QACpC,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAED,gCAAO,GAAP,UAAQ,MAAoB,EAAE,OAA0B,EAAE,SAAqB;QAC7E,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,QAAQ,GAAG,IAAI,gFAAU,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,QAAQ,GAAG,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;QACvD,IAAI,CAAC,QAAQ;aACV,aAAa,EAAE;aACf,SAAS,CAAC,WAAC;YACV,IAAI,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC;YACzB,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,cAAc,CAAC,kBAAkB,EAAE;gBACjE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACtB,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACxB;;gBAEC,SAAS,EAAE,CAAC;QAChB,CAAC,EACC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,YAAY,GAAG,CAAC,CAAC,EAA7B,CAA6B,EAClC;YACE,OAAO,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC;YACnD,OAAO,CAAC,QAAQ,EAAE,CAAC;QACrB,CAAC,CACF,CAAC;IACN,CAAC;IAED,6BAAI,GAAJ,UAAK,IAAY;QACf,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC;IACvC,CAAC;IAED,8BAAK,GAAL;QACE,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;SAC1B;IACH,CAAC;IAEO,gCAAO,GAAf,UAAgB,gBAAyB;QACvC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,oBAAoB,GAAG,GAAG,GAAG,cAAc,CAAC,UAAU,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC;IAC7J,CAAC;IAvDc,iCAAkB,GAAG,IAAI,CAAC;IAC1B,yBAAU,GAAG,uBAAuB,CAAC;IAwDtD,qBAAC;CAAA;AA3D0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wGCgBf,wIAAuC,KACnC,0IAAoB,KAChB,sHAAI,kFAAK,MAEb,2IAAoB,KAChB;;;;;;;;;;;wBAAgE;MAAzD;;wBAA0B;MAAjC,8yDAAgE,mFAChE,qPAC2C,YADG;;wBAAgB;MAA9D,wBAC2C,mFAE3C,mDAJsD,kBAAQ,EAA9D,YAAgE,EAAV,SAAQ,GAA5B,8BAAmB,EAA9C,oBAA0B,eAAjC,aAAgE,EAA9B,SAAmB,EAA9C,UAA0B,2BAAjC,k0BAAgE,GAE5D,iFAAsC,cAD1C,aAC2C,EAAvC,UAAsC;wGA/BlD;;;;;wBAAiD;MAA3C;;wBAAkB;MAAxB,2yBAAiD,IACjD,uIAAiB,KACb,0IAAoB,KAChB,sHAAI,wFAAW,MAGnC,uIAAiB,KACD,2IAAoB,KAChB;;;;;;;;;;;wBACiD;MADnB;;wBAAwB;MAAtD,+0DACiD,IAGzD,sHAAG,KACH,wIAAiB,KACb,2IAAoB,KAChB,2LAAgG,kFAEhG,MAAS,+EACT,oPAAsF,YAAzC;;wBAAkB;MAA/D,wBAAsF,qFAEtF,MAIR,4YAAuC,IAavC,wIAAiB,KACb,2IAAoB,KAChB,uHAAI,mFAAM,MAG9B,wIAAiB,KACD,2IAAoB,KAChB,yNAAwF,kDAnCrE,mBAAQ,EAD3B,aACiD,EAA9B,UAAQ,GAA1B,6BAAiB,EAAU,oBAAoB,UADlB,oBAAwB,aAAtD,aACiD,EAAhD,UAAiB,EAAU,UAAoB,EADlB,UAAwB,GAgB7C,oBAAqB,gBAAtC,aAAuC,EAAtB,UAAqB,mDAxBtC,8sBAAiD,GAQzC,80BACiD,GAMH,8FAAiD,WAA/F,aAAgG,EAAlD,UAAiD,GAG/B,qBAAqB,UAArF,aAAsF,EAAtB,UAAqB,GA0BvD,oBAAuB,gBAArD,aAAwF,EAA1D,UAAuB;;;;;;;;;;;;;;;;AC3CzE;AAAA;AAAA;AAAmD;AACnD,4EAA4E;AAE5E;IA8DI,4BAAoB,eAA+B;QAA/B,oBAAe,GAAf,eAAe,CAAgB;QALnD,kBAAa,GAAG,EAAE,CAAC;QACnB,iBAAY,GAAG,EAAE,CAAC;QAClB,YAAO,GAAG,KAAK,CAAC;QAChB,kBAAa,GAAG,KAAK,CAAC;QAGlB,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAC5B,CAAC;IAED,2CAAc,GAAd,UAAe,IAAI;QACf,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;IACxD,CAAC;IAED,gCAAG,GAAH;QAAA,iBAeC;QAdG,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,GAAG,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;QACxE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,eAAe,CAAC,OAAO,CACxB;YACI,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,MAAM,EAAE,IAAI,CAAC,UAAU;SAC1B,EACD;YACI,IAAI,EAAE,WAAC,IAAI,YAAI,CAAC,aAAa,IAAI,CAAC,EAAvB,CAAuB;YAClC,QAAQ,EAAE,cAAM,YAAI,CAAC,MAAM,EAAE,EAAb,CAAa;SAChC,EACD,cAAM,YAAI,CAAC,aAAa,GAAG,IAAI,EAAzB,CAAyB,CAClC,CAAC;IACN,CAAC;IAED,iCAAI,GAAJ;QACI,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;QAC5C,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC7C,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC/B,CAAC;IAED,mCAAM,GAAN;QACI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC1C,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;IACjC,CAAC;IAEL,yBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uGCnGe,yIAAsD,KAClD,0NAAqH,YAArF;;wBAAiC;MAAjE,wBAAqH,kFAErH,yDAFkE,+CAAkD,0BAApH,YAAqH,EAAnD,SAAkD,GAAC,kEAErH;uGAcA,uHAA2C,sGAE3C,6HAAK;uGALL,uHAAyC,KACrC,qJAAuD,iFAAI,MAC/D,uHAAK,KACL,0YAA2C,iDAAtC,oBAAqC,6BAA1C,YAA2C,EAAtC,SAAqC,mDAFnC,mBAAmC,6BAAtC,YAAuD,EAApD,SAAmC;0LAnBlD,uIAAiB,KACb,0IAAoB,KAChB,sHAAI,gGAAmB,MAE3B,mdAAsD,IAM1D,uIAAiB,KACb,0IAAoB,KAChB,sHAAI,oFAAO,MAEf,2IAAoB,KAChB,4kBAAsE,IAE1E,2IAAoB,KAChB,2YAAyC,iDAd1B,mBAAkC,YAArD,YAAsD,EAAnC,SAAkC,GAW9B,2DAAoC,2BAAC,mBAAa,EAArE,aAAsE,EAAnD,SAAoC,EAAC,SAAa,GAGhE,2DAAmC,8BAAxC,aAAyC,EAApC,SAAmC;;;;;;;;;;;;;;;;AClB5D;AAAA;AAAA;AAAA;AAAA;AAAkF;AACE;AACjC;AAGnD;IAwCE,2BAAoB,eAA+B;QAAnD,iBAQC;QARmB,oBAAe,GAAf,eAAe,CAAgB;QAJzC,qBAAgB,GAAG,IAAI,0DAAY,EAAU,CAAC;QAKtD,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QACvC,IAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,WAAC;YACnD,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACf,KAAI,CAAC,SAAS,GAAG,CAAC,CAAC;YACnB,KAAI,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5B,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2CAAe,GAAf,UAAgB,KAAK;QACnB,IAAI,QAAQ,GAAG,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC;QAC7C,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,QAAQ,CAAC,CAAC;QAC/C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,IAAI,IAAI,QAAQ,EAAlB,CAAkB,CAAC,CAAC;QACpE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;IACxD,CAAC;IAED,wCAAY,GAAZ;QACE,OAAO,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC;IACjE,CAAC;IACH,wBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oMClED,mMAA+D,YAA7C;;wBAA4C;MAA9D,osBAA+D,MAC/D,ixBAAW;;;;;;;;;;;;;;;;ACCX;AAAA;AAAA;AAA2D;AAE3D;IAAA;IAmBA,CAAC;IANC,0CAAe,GAAf,UAAgB,GAAG;QACjB,OAAO,CAAC,GAAG,CAAC,mCAAmC,GAAG,GAAG,CAAC,CAAC;QACvD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QACtC,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;IAC/C,CAAC;IAEH,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACtBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACQ;SAGV,EAAE,IAAI,EAAE,MAAM,EAAE,OACf,EAAE,IAAI,EAAE,OAAO,EAAE;AAFvE,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,2EAAgB,EAAE,IAAI,IAAkB,EAAE;IACrE,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,2EAAgB,EAAE,IAAI,IAAmB,EAAE;IACvE,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,2EAAgB,EAAE;IACzC,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE;CACtD,CAAC;AAEF;IAAA;IAIgC,CAAC;IAAD,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kGCfjC,ggBAAQ,IACR,0JAAoC,KAClC,uHAAK,KACH,yjBAAe,IAEjB,sHAAM,KACN,0HAAQ,KACN,qHAAG,+FAAkB,2BAJrB,YAAe;;;;;;;;;;;;;;;;ACDnB;AAAA;AAAA;IAAA;QAME,UAAK,GAAG,UAAU,CAAC;IACrB,CAAC;IAAD,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOD;AAAA;AAAA;IAAA;IAayB,CAAC;IAAD,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gHC5Be,kMAAgH,YAApC;;wBAAkB;MAA9F,wBAAgH,wDAAhB,mBAAe,SAA/G,YAAgH,EAAhB,SAAe;4OADxJ,yIACyC,uZAAgH,iDAApG,oFAA+D,WAA3E,YAAgH,EAApG,SAA+D,mDADpH,uMACyC;;;;;;;;;;;;;;;;ACGzC;AAAA;AAAA;IAAA;QAWY,iBAAY,GAAG,MAAM,CAAC;QACtB,mBAAc,GAAG,MAAM,CAAC;QAqBxB,kBAAa,GAAW,CAAC,CAAC,CAAC;IASvC,CAAC;IA5BG,sBAAI,+CAAO;aAAX;YACI,OAAO,IAAI,CAAC,QAAQ,CAAC;QACzB,CAAC;aAMD,UAAqB,QAAgB;YACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;YAChC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC;QACpC,CAAC;;;OAVA;IAED,sBAAI,6CAAK;aAAT;YACI,OAAO,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC;aAOD,UAAmB,QAAgB;YAC/B,IAAI,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC;gBAC7C,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;YAClC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;QAC3B,CAAC;;;OAXA;IAeD,2CAAM,GAAN;QACI,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,YAAY;YACjC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;;YAErG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC;QACpC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC;IAC7F,CAAC;IACL,iCAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qGChCmB,2IAAkD,KAC9C;;;oZAAgF,GAA7C,uDAA2B,GAA9D,klBAAgF,KAA7E,uDAA+B,IAA8C,2EAAmB,2BAAhE,gCAA2B,0BAA9D,YAAgF,EAA7C,SAA2B,GAA3D,sCAA+B,GAAlC,YAAgF,EAA7E,SAA+B,2BAAlC,oMAAgF,0EAAmB;qGAd3H,4LAAqE,KAC7D,8IAAuB,KACnB,iJAA2B,KACvB,2OAAmG,KAC/F,4IAAsB,8FAAiB,MACvC,6IAAuB,KACvB,6IAAuB,KACvB,6IAAuB,KAE3B,mMAAiE,iFAAI,MAEzE,6JAAsC,KAClC,8IAAuB,KACnB,kdAAkD,iDAA9C,mBAA4B,SAAhC,aAAkD,EAA9C,SAA4B;;;;;;;;;;;;;;;;ACZpD;AAAA;AAAA;AAAgD;AAEhD;IA8BE,yBAAY,MAAc;QACxB,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACnD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAjC,CAAiC,CAAC,CAAC;IAC7E,CAAC;IAEH,sBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACtCD;AAAA;AAAA;AAAoD;AAEpD;IAAA;IAYA,CAAC;IAPG,kCAAS,GAAT,UAAU,KAAa,EAAE,GAAW;QAChC,IAAI,KAAK,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;QAChC,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;YACnC,KAAK,CAAC,CAAC;YACP,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC;IAC1C,CAAC;IAEL,qBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACfD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,uBAAgB,CAAC,6EAAU;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { NextObserver, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { SourceBundle } from './sourcebundle.interface';\r\nimport { LanguageDescription } from './languageDescription.interface';\r\nimport { $WebSocket } from 'angular2-websocket/angular2-websocket';\r\n\r\n@Injectable()\r\nexport class EsolangService {\r\n\r\n  private static _interruptSequence = '\\t';\r\n  private static _targetUrl = \"api/EsotericLanguage/\";\r\n  private _channel: $WebSocket;\r\n\r\n  constructor(private _http: HttpClient) {\r\n    console.log('built ELS - ok' + this._http);\r\n  }\r\n\r\n  supportedLanguages() {\r\n    return this\r\n      ._http\r\n      .get(this.formUrl(false))\r\n      .pipe(map((data: any[]) => {\r\n        return <LanguageDescription[]>data\r\n      }));\r\n  }\r\n\r\n  execute(bundle: SourceBundle, handler: NextObserver<any>, interrupt: () => void) {\r\n    this.close();\r\n    this._channel = new $WebSocket(this.formUrl(true));\r\n    this._channel.connect();\r\n    this.send('|' + bundle.language + '|' + bundle.source);\r\n    this._channel\r\n      .getDataStream()\r\n      .subscribe(m => {\r\n        var received = m['data'];\r\n        if (!received || received[0] != EsolangService._interruptSequence) {\r\n          console.log(received);\r\n          handler.next(received);\r\n        }\r\n        else\r\n          interrupt();\r\n      },\r\n        e => console.log('WS error: ' + e),\r\n        () => {\r\n          console.log('Seems like the subject is exhausted');\r\n          handler.complete();\r\n        }\r\n      );\r\n  }\r\n\r\n  send(text: string) {\r\n    this._channel.send(text).subscribe();\r\n  }\r\n\r\n  close() {\r\n    if (this._channel) {\r\n      this._channel.close(true);\r\n      this._channel = null;\r\n      console.log('Closed ws');\r\n    }\r\n  }\r\n\r\n  private formUrl(webSocketRequest: boolean) {\r\n    return (webSocketRequest ? \"ws\" : \"http\") + \"://localhost:55444\" + \"/\" + EsolangService._targetUrl + (webSocketRequest ? \"execute\" : \"SupportedLanguages\");\r\n  }\r\n\r\n}\r\n","\n            <form (ngSubmit)=\"run()\" #executionForm=\"ngForm\">\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <h4>Source code</h4>\n                </div>\n</div>\n<div class=\"row\">\n                <div class=\"col-12\">\n                    <textarea cols=\"80\" rows=\"10\" [(ngModel)]=\"sourceCode\" style=\"min-width: 100%;\" \n                     name=\"sourceCode\" required [disabled]=\"running\"></textarea>\n                </div>\n</div>\n            <p></p>\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!executionForm.form.valid || running\">\n                      Run\n                    </button>&nbsp;    \n                    <button type=\"button\" class=\"btn btn-danger\" (click)=\"cancel()\" [disabled]=\"!running\">\n                      Cancel\n                    </button>    \n                </div>\n            </div> \n            \n            <div class=\"row\" *ngIf=\"inputRequired\">\n                <div class=\"col-12\">\n                    <h4>Input</h4>\n                </div>\n                <div class=\"col-12\">\n                    <input [(ngModel)]=\"programInput\" name=\"programInput\" required/>&nbsp;\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"send()\" \n                        [disabled]=\"!executionForm.form.valid\">\n                    Send\n                    </button>\n                </div>\n            </div>\n            </form>\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <h4>Output</h4>\n                </div>\n</div>\n<div class=\"row\">\n                <div class=\"col-12\">\n                    <textarea cols=\"80\" rows=\"10\" [value]=\"programOutput\" disabled style=\"min-width: 100%;\"></textarea>\n                </div>\n            </div>\n    ","\r\nimport { Component } from \"@angular/core\";\r\nimport { EsolangService } from './esolang.service';\r\n// import { LocalStorage } from 'angular2-extensible-decorators/components';\r\n\r\n@Component({\r\n    selector: \"execution\",\r\n    template: `\r\n            <form (ngSubmit)=\"run()\" #executionForm=\"ngForm\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <h4>Source code</h4>\r\n                </div>\r\n</div>\r\n<div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <textarea cols=\"80\" rows=\"10\" [(ngModel)]=\"sourceCode\" style=\"min-width: 100%;\" \r\n                     name=\"sourceCode\" required [disabled]=\"running\"></textarea>\r\n                </div>\r\n</div>\r\n            <p></p>\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!executionForm.form.valid || running\">\r\n                      Run\r\n                    </button>&nbsp;    \r\n                    <button type=\"button\" class=\"btn btn-danger\" (click)=\"cancel()\" [disabled]=\"!running\">\r\n                      Cancel\r\n                    </button>    \r\n                </div>\r\n            </div> \r\n            \r\n            <div class=\"row\" *ngIf=\"inputRequired\">\r\n                <div class=\"col-12\">\r\n                    <h4>Input</h4>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <input [(ngModel)]=\"programInput\" name=\"programInput\" required/>&nbsp;\r\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"send()\" \r\n                        [disabled]=\"!executionForm.form.valid\">\r\n                    Send\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            </form>\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <h4>Output</h4>\r\n                </div>\r\n</div>\r\n<div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <textarea cols=\"80\" rows=\"10\" [value]=\"programOutput\" disabled style=\"min-width: 100%;\"></textarea>\r\n                </div>\r\n            </div>\r\n    `,\r\n    providers: [EsolangService]\r\n})\r\n\r\nexport class ExecutionComponent {\r\n    language: string;\r\n    sourceCode: string;\r\n    programOutput = '';\r\n    programInput = '';\r\n    running = false; \r\n    inputRequired = false;\r\n\r\n    constructor(private _esolangService: EsolangService) {\r\n        console.log('built EC');\r\n    }\r\n\r\n    changeLanguage(lang) {\r\n        this.language = lang;\r\n        console.log('Language changed to ' + this.language);\r\n    }\r\n\r\n    run() {\r\n        console.log('Run ' + this.language + ' program --> ' + this.sourceCode);\r\n        this.running = true;\r\n        this.programOutput = '';\r\n        this._esolangService.execute(\r\n            {\r\n                language: this.language,\r\n                source: this.sourceCode\r\n            },\r\n            {\r\n                next: m => this.programOutput += m,\r\n                complete: () => this.cancel()\r\n            },\r\n            () => this.inputRequired = true\r\n        );\r\n    } \r\n\r\n    send() {\r\n        console.log('Sending ' + this.programInput);\r\n        this._esolangService.send(this.programInput);\r\n        this.inputRequired = false;\r\n    }\r\n\r\n    cancel() {\r\n        this.running = this.inputRequired = false;\r\n        this._esolangService.close();\r\n    } \r\n\r\n}\r\n","\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <h3>Available languages</h3>\n                </div>\n                <div class=\"col-3\" *ngFor=\"let language of languages\">\n                    <button class=\"btn btn-primary\" (click)=\"languageChanged($event)\" [disabled]=\"currentLanguage.name == language.name\">\n                        {{language.name}}\n                    </button>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <h3>Summary</h3>\n                </div>\n                <div class=\"col-12\">\n                    <expandableSummary [content]=\"currentLanguage?.summary\" [limit]=\"100\"></expandableSummary>\n                </div>\n                <div class=\"col-12\">\n                    <div *ngIf=\"currentLanguage?.detailsUrl\">\n                        <a [href]=\"currentLanguage.detailsUrl\" target=\"_blank\">Link</a>\n                    <div>\n                    <div *ngIf=\"!(currentLanguage.detailsUrl)\">\n                        No details Url provided\n                    <div>\n                </div>\n            </div>     \n    ","\r\nimport { Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\r\nimport { ExpandableSummaryComponent } from '../shared/expandable-summary.component';\r\nimport { EsolangService } from './esolang.service';\r\nimport { LanguageDescription } from './languageDescription.interface';\r\n\r\n@Component({\r\n  selector: \"languageSelector\",\r\n  template: `\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <h3>Available languages</h3>\r\n                </div>\r\n                <div class=\"col-3\" *ngFor=\"let language of languages\">\r\n                    <button class=\"btn btn-primary\" (click)=\"languageChanged($event)\" [disabled]=\"currentLanguage.name == language.name\">\r\n                        {{language.name}}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <h3>Summary</h3>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <expandableSummary [content]=\"currentLanguage?.summary\" [limit]=\"100\"></expandableSummary>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <div *ngIf=\"currentLanguage?.detailsUrl\">\r\n                        <a [href]=\"currentLanguage.detailsUrl\" target=\"_blank\">Link</a>\r\n                    <div>\r\n                    <div *ngIf=\"!(currentLanguage.detailsUrl)\">\r\n                        No details Url provided\r\n                    <div>\r\n                </div>\r\n            </div>     \r\n    `,\r\n  providers: [EsolangService]\r\n})\r\n\r\nexport class LanguageComponent {\r\n  @ViewChild(ExpandableSummaryComponent)\r\n  private _summary: ExpandableSummaryComponent;\r\n  @Output() onLanguageChange = new EventEmitter<string>();\r\n  languages: LanguageDescription[];\r\n  currentLanguage: LanguageDescription;\r\n\r\n  constructor(private _esolangService: EsolangService) {\r\n    console.log('built TBC, call service');\r\n    this._esolangService.supportedLanguages().subscribe(t => {\r\n      console.log(t);\r\n      this.languages = t;\r\n      this.currentLanguage = t[0];\r\n      this.onLanguageChange.emit(this.currentLanguage.name);\r\n    });\r\n  }\r\n\r\n  languageChanged(event) {\r\n    var language = event.currentTarget.innerText;\r\n    console.log('Language changed to ' + language);\r\n    this.currentLanguage = this.languages.find(l => l.name == language);\r\n    this.onLanguageChange.emit(this.currentLanguage.name);\r\n  }\r\n\r\n  hasTargetUrl() {\r\n    return this.currentLanguage && this.currentLanguage.detailsUrl;\r\n  }\r\n}\r\n","<languageSelector (onLanguageChange)=\"languageChanged($event)\"></languageSelector>\r\n<execution></execution>\r\n","import { Component, ViewChild } from \"@angular/core\";\r\nimport { LanguageComponent } from './language.component';\r\nimport { ExecutionComponent } from './execution.component';\r\n\r\n@Component({\r\n  selector: \"testbed\",\r\n  templateUrl: './testbed.component.html',\r\n  providers: [LanguageComponent, ExecutionComponent]\r\n})\r\n\r\nexport class TestBedComponent {\r\n\r\n  @ViewChild(ExecutionComponent)\r\n  private _executionComponent: ExecutionComponent;\r\n\r\n  currentLanguage: string;\r\n\r\n  languageChanged(arg) {\r\n    console.log('(Parent) --> Language changed to ' + arg);\r\n    console.log(this._executionComponent);\r\n    this._executionComponent.changeLanguage(arg);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TestBedComponent } from './TestBed/testbed.component';\n\nconst routes: Routes = [\n  { path: 'home', component: TestBedComponent, data: { name: 'Home' } },\r\n  { path: 'about', component: TestBedComponent, data: { name: 'About' } },\r\n  { path: '', component: TestBedComponent },\r\n  { path: '**', redirectTo: 'home', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<navbar></navbar>\r\n<div class=\"container body-content\">\r\n  <div>\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n  <hr />\r\n  <footer>\r\n    <p>&copy; 2016 - ELTB</p>\r\n  </footer>\r\n</div>\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ELTB-SPA';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NavbarComponent } from \"./shared/navbar.component\";\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\n\nimport { TestBedComponent } from './TestBed/testbed.component';\nimport { LanguageComponent } from './TestBed/language.component';\r\nimport { ExecutionComponent } from './TestBed/execution.component';\r\nimport { ExpandableSummaryComponent } from './shared/expandable-summary.component';\r\nimport { SummariserPipe } from './shared/summariser.pipe';\n\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent, NavbarComponent, TestBedComponent, LanguageComponent, ExecutionComponent, ExpandableSummaryComponent, SummariserPipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [ ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\n        {{ content | summariser:limit }} <a href='#' *ngIf=\"action == 'less' || (content && content.length > limit)\" (click)=\"toggle()\"  [text]=\"action\"></a>\n    ","﻿\r\nimport { Component, Input } from \"@angular/core\";\r\nimport { SummariserPipe } from '../shared/summariser.pipe'\r\n\r\n@Component({\r\n    selector: \"expandableSummary\",\r\n    template: `\r\n        {{ content | summariser:limit }} <a href='#' *ngIf=\"action == 'less' || (content && content.length > limit)\" (click)=\"toggle()\"  [text]=\"action\"></a>\r\n    `\r\n})\r\n\r\nexport class ExpandableSummaryComponent {\r\n\r\n    private _content: string;\r\n    private _limit: number;\r\n    private _expandLabel = 'more';\r\n    private _contractLabel = 'less';\r\n\r\n    get content() {\r\n        return this._content;\r\n    }\r\n\r\n    get limit() {\r\n        return this._limit;\r\n    }\r\n\r\n    @Input() set content(newValue: string) {\r\n        this._content = newValue;\r\n        this.action = this._expandLabel;\r\n        this.limit = this._initialLimit;\r\n    }\r\n    @Input() set limit(newValue: number) {\r\n        if (!this._initialLimit || this._initialLimit < 0)\r\n            this._initialLimit = newValue;\r\n        this._limit = newValue;\r\n    }\r\n    action: string;\r\n    private _initialLimit: number = -1;\r\n\r\n    toggle() {\r\n        if (this.action === this._expandLabel)\r\n            this.limit = this.content && this.content.length > this.limit ? this.content.length + 1 : this.limit;\r\n        else\r\n            this.limit = this._initialLimit;\r\n        this.action = this.action == this._expandLabel ? this._contractLabel : this._expandLabel;\r\n    }\r\n}","\n<nav class=\"navbar navbar-inverse navbar-fixed-top navbar-expand-lg\">\n        <div class=\"container\">\n            <div class=\"navbar-header\">\n                <button type=\"button\" class=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\".navbar-collapse\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a asp-controller=\"Home\" asp-action=\"Index\" class=\"navbar-brand\">ELTB</a>\n            </div>\n            <div class=\"navbar-collapse collapse\">\n                <ul class=\"navbar-nav\">\n                    <li *ngFor=\"let route of routes\" class=\"nav-item\">\n                        <a [routerLinkActive]=\"['active']\" [routerLink]=\"[route.path]\" class=\"nav-link\">{{route.data.name}}</a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </nav>\n    ","\r\nimport { Component, Input } from \"@angular/core\";\r\nimport { Router, Route } from '@angular/router';\r\n\r\n@Component({\r\n  selector: \"navbar\",\r\n  template: `\r\n<nav class=\"navbar navbar-inverse navbar-fixed-top navbar-expand-lg\">\r\n        <div class=\"container\">\r\n            <div class=\"navbar-header\">\r\n                <button type=\"button\" class=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\".navbar-collapse\">\r\n                    <span class=\"sr-only\">Toggle navigation</span>\r\n                    <span class=\"icon-bar\"></span>\r\n                    <span class=\"icon-bar\"></span>\r\n                    <span class=\"icon-bar\"></span>\r\n                </button>\r\n                <a asp-controller=\"Home\" asp-action=\"Index\" class=\"navbar-brand\">ELTB</a>\r\n            </div>\r\n            <div class=\"navbar-collapse collapse\">\r\n                <ul class=\"navbar-nav\">\r\n                    <li *ngFor=\"let route of routes\" class=\"nav-item\">\r\n                        <a [routerLinkActive]=\"['active']\" [routerLink]=\"[route.path]\" class=\"nav-link\">{{route.data.name}}</a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n    `\r\n})\r\n\r\nexport class NavbarComponent {\r\n\r\n  routes: Route[];\r\n\r\n  constructor(router: Router) {\r\n    console.log('Doing routes' + router.config.length);\r\n    this.routes = router.config.filter(r => r.path && r.path.indexOf('*') < 0);\r\n  }\r\n\r\n}\r\n","﻿\r\nimport { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n    name: 'summariser'\r\n})\r\nexport class SummariserPipe implements PipeTransform {\r\n\r\n    transform(value: string, lim: number) {\r\n        var limit = lim <= 0 ? 40 : lim;\r\n        return !value || value.length < limit ? \r\n            value :\r\n            value.substring(0, limit) + '...';\r\n    }\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}